local Player = "LocalPlayer"

local Remote = game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure
local Plr = game:GetService("Players").LocalPlayer
local Check = true

local BpRecive = { [1] = "Wall2Tall", [2] = "Door1", [3] = "Floor2", [4] = "Floor1Small", [5] = "Post", [6] = "Wedge10", [7] = "Wall3Tall", [8] = "Wall1Tall", [9] = "Wall1", [10] = "Wall1Short", [11] = "Wall2", [12] = "Wall2Short", [13] = "Wall1TallCorner", [14] = "Wall1Corner", [15] = "Wall1ShortCorner", [16] = "Wall1Thin", [17] = "Wall1TallThin", [18] = "Wall1ShortThin", [19] = "Wall2TallThin", [20] = "Wall2Thin", [21] = "Wall2ShortThin", [22] = "Wall2TallCorner", [23] = "Wall2Corner", [24] = "Wall2ShortCorner", [25] = "Wall3Thin", [26] = "Wall3TallThin", [27] = "Wall3Corner", [28] = "Wall3TallCorner", [29] = "Floor1Large", [30] = "Floor1", [31] = "Floor2Large", [32] = "Floor2Small", [33] = "Stair1", [34] = "Stair2", [35] = "Wedge1_Thin", [36] = "Wedge9_Thin", [37] = "Wedge4_Thin", [38] = "Wedge7_Thin", [39] = "Chair1", [40] = "Table1", [41] = "Table2", [42] = "Ladder1", [43] = "Cabinet1Thin", [44] = "Cabinet1", [45] = "Cabinet1CornerTight", [46] = "Cabinet1CornerWide", [47] = "CounterTop1Thin", [48] = "CounterTop1", [49] = "CounterTop1Sink", [50] = "Floor2Tiny", [51] = "Floor1Tiny", [52] = "Wedge1", [53] = "Wedge2", [54] = "Wedge3", [55] = "Wedge4", [56] = "Wedge8", [57] = "Wedge7", [58] = "Wedge6", [59] = "Wedge2_Thin", [60] = "Wedge3_Thin", [61] = "Wedge10_Thin", [62] = "Wedge9", [63] = "Wedge6_Thin", [64] = "Wedge8_Thin", [65] = "Wedge5", [66] = "Wedge5_Thin", [67] = "Wall3", [68] = "Door2", [69] = "Door3" }

local MaxVal = 48
local ManyC = 0

local function ToFill(v)
    ManyC = ManyC + 1
    Remote:FireServer(v.ItemName.Value, v.PrimaryPart.CFrame, Plr, nil, v, true)
    ManyC = ManyC - 2
end

local function SpawnBp(Name, cframe)
    game:GetService("ReplicatedStorage").PlaceStructure.ClientPlacedBlueprint:FireServer(Name, cframe, Plr)
    ManyC = ManyC + 1
end

local V1 = game.Workspace.PlayerModels.ChildAdded:connect(function(v)
    if v:WaitForChild("Owner", 1) and v:WaitForChild("ItemName", 1) and v:WaitForChild("Type", 1) and v.Type.Value == "Blueprint" and v.Owner.Value == Plr then 
        ToFill(v)
    end
end)

local LDR = game.ReplicatedStorage.LoadSaveRequests
local RS = LDR.RequestSave

local MainTable = {}

local function Start()
    for i, v in pairs(game.Workspace.PlayerModels:GetChildren()) do
        if v:FindFirstChild("Owner") and v.Owner.Value == game.Players.LocalPlayer and v:FindFirstChild("Type") and v.Type.Value == "Blueprint" then
            game.ReplicatedStorage.Interaction.DestroyStructure:FireServer(v)
        end
    end
    RS.Parent = nil
    local ToWait = 1
    for i, v in pairs(MainTable) do
        if ManyC > MaxVal then repeat wait() until ManyC < MaxVal end
        SpawnBp(v.Name, v.CFrame)
        if ToWait > 2 then wait() ToWait = 1 else ToWait = ToWait + 1 end
    end
    MainTable = {}
    RS.Parent = LDR
    wait(5)
    V1:Disconnect()
end

local Base
for i, v in pairs(game.Workspace.Properties:GetChildren()) do
    if v.Owner.Value == game.Players[Player] then
        Base = v.OriginSquare.CFrame
    end
end

local function Sbp(A_1, A_2, A_3, A_4, A_5, A_6, A_7)
    MainTable[#MainTable + 1] = {
    ["Name"] = BpRecive[A_1],
    ["CFrame"] = Base * CFrame.Angles(A_2, A_3, A_4) + Vector3.new(A_5, A_6, A_7)
    }
end

Sbp(22, -0, 0, -0, 38, 0.20000076293945312, -5)
Sbp(22, -0, -1.5707963705062866, 0, -45, 0.20000076293945312, -33)
Sbp(22, 0, 1.5707963705062866, 0, -46, 0.20000076293945312, -47)
Sbp(22, 0, 1.5707963705062866, 0, -27, 0.20000076293945312, -32)
Sbp(22, -0, 0, -0, -27, 0.20000076293945312, 30)
Sbp(22, -3.1415927410125732, 0, -3.1415927410125732, -80, 0.20000076293945312, -47)
Sbp(22, -0, -1.5707963705062866, 0, -81, 0.20000076293945312, 30)
Sbp(22, -3.1415927410125732, 0, -3.1415927410125732, -81, 0.20000076293945312, 12)
Sbp(22, -3.1415927410125732, 0, -0, 23, 8, -16)
Sbp(22, 0, 1.5707963705062866, 0, 38, 0.20000076293945312, -23)
Sbp(22, -0, -1.5707963705062866, 0, 24, 0.20000076293945312, -5)
Sbp(22, -3.1415927410125732, -1.5707963705062866, 0, 32, 8, -23)
Sbp(22, -3.1415927410125732, -1.5707963705062866, 0, 25, 8, -16)
Sbp(22, 3.1415927410125732, 1.5707963705062866, 0, 31, 8, -17)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, -77, 0.20000076293945312, -47.5)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, 3)
Sbp(1, -0, -1.5707963705062866, 0, -80.5, 0.20000076293945312, -36)
Sbp(1, 0, 1.5707963705062866, 0, 48.5, 0.20000076293945312, -41)
Sbp(1, 0, 1.5707963705062866, 0, 38.5, 0.20000076293945312, -12)
Sbp(1, -0, -1.5707963705062866, 0, -80.5, 0.20000076293945312, -12)
Sbp(1, -0, 0, -0, 31, 0.20000076293945312, -4.5)
Sbp(1, -0, -1.5707963705062866, 0, 23.5, 0.20000076293945312, -12)
Sbp(1, 0, 1.5707963705062866, 0, 38.5, 0.20000076293945312, -8)
Sbp(1, 0, 1.5707963705062866, 0, 38.5, 0.20000076293945312, -20)
Sbp(1, -0, 0, -0, -38, 0.20000076293945312, -32.5)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, 42, 0.20000076293945312, 73.5)
Sbp(1, -0, 0, -0, 35, 0.20000076293945312, -4.5)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, 35, 0.20000076293945312, -23.5)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, 7)
Sbp(1, -3.1415927410125732, 0, -0, 28, 8, -16.5)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, -53, 0.20000076293945312, -47.5)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, -13)
Sbp(1, -0, 0, -0, 27, 0.20000076293945312, -4.5)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, 54, 0.20000076293945312, 73.5)
Sbp(1, 0, 1.5707963705062866, 0, -45.5, 0.20000076293945312, -36)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, -57, 0.20000076293945312, -47.5)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, -49, 0.20000076293945312, -47.5)
Sbp(1, -0, -1.5707963705062866, 0, -80.5, 0.20000076293945312, -44)
Sbp(1, -3.1415927410125732, -1.5707963705062866, 0, 22.5, 8, -13)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, -65, 0.20000076293945312, -47.5)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, 15)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, -25)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, -69, 0.20000076293945312, -47.5)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, -61, 0.20000076293945312, -47.5)
Sbp(1, 0, 1.5707963705062866, 0, -45.5, 0.20000076293945312, -44)
Sbp(1, -0, -1.5707963705062866, 0, -80.5, 0.20000076293945312, -24)
Sbp(1, -0, 0, -0, -42, 0.20000076293945312, -32.5)
Sbp(1, -0, -1.5707963705062866, 0, -80.5, 0.20000076293945312, -28)
Sbp(1, -0, 0, -0, -34, 0.20000076293945312, -32.5)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, 23)
Sbp(1, -0, -1.5707963705062866, 0, 23.5, 0.20000076293945312, -8)
Sbp(1, 0, 1.5707963705062866, 0, 38.5, 0.20000076293945312, -16)
Sbp(1, -0, -1.5707963705062866, 0, -80.5, 0.20000076293945312, -40)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, -17)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, -1)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, 19)
Sbp(1, -3.1415927410125732, -1.5707963705062866, 0, 31.5, 8, -20)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, 27)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, 11)
Sbp(1, -0, 0, -0, -30, 0.20000076293945312, 30.5)
Sbp(1, 0, 1.5707963705062866, 0, -45.5, 0.20000076293945312, -40)
Sbp(1, -0, -1.5707963705062866, 0, -80.5, 0.20000076293945312, -20)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, -5)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, -21)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, -73, 0.20000076293945312, -47.5)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, -9)
Sbp(1, -0, 0, -0, -30, 0.20000076293945312, -32.5)
Sbp(1, -3.1415927410125732, 0, -3.1415927410125732, -34, 0.20000076293945312, 30.5)
Sbp(1, -0, 0, -0, -54, 0.20000076293945312, 30.5)
Sbp(1, -0, -1.5707963705062866, 0, -80.5, 0.20000076293945312, -16)
Sbp(1, 0, 1.5707963705062866, 0, -26.5, 0.20000076293945312, -29)
Sbp(1, -0, -1.5707963705062866, 0, -80.5, 0.20000076293945312, -32)
Sbp(1, -0, 0, -0, -66, 0.20000076293945312, 30.5)
Sbp(1, -0, 0, -0, -50, 0.20000076293945312, 30.5)
Sbp(1, -0, -1.5707963705062866, 0, -81.5, 0.20000076293945312, 15)
Sbp(1, -0, -1.5707963705062866, 0, -81.5, 0.20000076293945312, 23)
Sbp(1, -0, 0, -0, -70, 0.20000076293945312, 30.5)
Sbp(1, -0, 0, -0, -42, 0.20000076293945312, 30.5)
Sbp(1, -0, 0, -0, -46, 0.20000076293945312, 30.5)
Sbp(1, -0, 0, -0, -74, 0.20000076293945312, 30.5)
Sbp(1, -0, -1.5707963705062866, 0, -81.5, 0.20000076293945312, 19)
Sbp(1, -0, 0, -0, -38, 0.20000076293945312, 30.5)
Sbp(1, -0, -1.5707963705062866, 0, -80.5, 0.20000076293945312, 11)
Sbp(1, -0, 0, -0, -62, 0.20000076293945312, 30.5)
Sbp(1, -0, 0, -0, -78, 0.20000076293945312, 30.5)
Sbp(1, -0, 0, -0, -58, 0.20000076293945312, 30.5)
Start()
